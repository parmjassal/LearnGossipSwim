// automatically generated by the FlatBuffers compiler, do not modify

package org.learn.gossip.messages;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Message extends Table {
  public static Message getRootAsMessage(ByteBuffer _bb) { return getRootAsMessage(_bb, new Message()); }
  public static Message getRootAsMessage(ByteBuffer _bb, Message obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public int serverPort() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public boolean empty() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public byte messageType() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table message(Table obj) { int o = __offset(12); return o != 0 ? __union(obj, o) : null; }

  public static int createMessage(FlatBufferBuilder builder,
      byte type,
      int serverPort,
      boolean empty,
      byte message_type,
      int messageOffset) {
    builder.startObject(5);
    Message.addMessage(builder, messageOffset);
    Message.addServerPort(builder, serverPort);
    Message.addMessageType(builder, message_type);
    Message.addEmpty(builder, empty);
    Message.addType(builder, type);
    return Message.endMessage(builder);
  }

  public static void startMessage(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addServerPort(FlatBufferBuilder builder, int serverPort) { builder.addInt(1, serverPort, 0); }
  public static void addEmpty(FlatBufferBuilder builder, boolean empty) { builder.addBoolean(2, empty, false); }
  public static void addMessageType(FlatBufferBuilder builder, byte messageType) { builder.addByte(3, messageType, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(4, messageOffset, 0); }
  public static int endMessage(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

